<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddFailure" xml:space="preserve">
    <value>创建失败</value>
  </data>
  <data name="AddSuccess" xml:space="preserve">
    <value>新增成功</value>
  </data>
  <data name="BeReferencedCanNotDelete" xml:space="preserve">
    <value>对象被引用不可删除</value>
  </data>
  <data name="CanNotDelete" xml:space="preserve">
    <value>不可删除</value>
  </data>
  <data name="DeleteConfirm" xml:space="preserve">
    <value>真的要删除吗？</value>
  </data>
  <data name="DeleteFailed" xml:space="preserve">
    <value>删除数据失败</value>
  </data>
  <data name="Exception_Title" xml:space="preserve">
    <value>发生错误</value>
  </data>
  <data name="ExistSameNo" xml:space="preserve">
    <value>编号重复</value>
  </data>
  <data name="HasSonCanNotDelete" xml:space="preserve">
    <value>有子节点不可删除</value>
  </data>
  <data name="Infomation_Title" xml:space="preserve">
    <value>提示</value>
  </data>
  <data name="InsertFailed" xml:space="preserve">
    <value>插入数据失败</value>
  </data>
  <data name="InvalidTicket" xml:space="preserve">
    <value>无效的票据</value>
  </data>
  <data name="List_AtLeastOne" xml:space="preserve">
    <value>至少选择一项</value>
  </data>
  <data name="LoadFormFailure" xml:space="preserve">
    <value>窗体载入失败</value>
  </data>
  <data name="ObjCanNotEmpty" xml:space="preserve">
    <value>对象不可为空</value>
  </data>
  <data name="OPFailure" xml:space="preserve">
    <value>操作失败</value>
  </data>
  <data name="OPSuccess" xml:space="preserve">
    <value>操作成功</value>
  </data>
  <data name="SaveSuccess" xml:space="preserve">
    <value>保存成功</value>
  </data>
  <data name="TimeOutNeedLogin" xml:space="preserve">
    <value>登陆超时</value>
  </data>
  <data name="UnityExceptionType_DLLLoadFailure" xml:space="preserve">
    <value>程序集载入失败</value>
  </data>
  <data name="UpdateFailed" xml:space="preserve">
    <value>更新数据失败</value>
  </data>
  <data name="WCFExceptionType_AuthenticationException" xml:space="preserve">
    <value>用户名或密码错误</value>
  </data>
  <data name="WCFExceptionType_EndpointNotFoundException" xml:space="preserve">
    <value>连接服务器失败或未在服务端找到对应的服务</value>
  </data>
  <data name="WCFExceptionType_FaultException" xml:space="preserve">
    <value>调用服务方法失败</value>
  </data>
  <data name="WCFExceptionType_ProtocolException" xml:space="preserve">
    <value>服务器内部错误</value>
  </data>
  <data name="UnKnowErrorTitle" xml:space="preserve">
    <value>无法处理的异常</value>
  </data>
  <data name="CateSuccess" xml:space="preserve">
    <value>分类成功</value>
  </data>
  <data name="DeleteSuccess" xml:space="preserve">
    <value>删除成功</value>
  </data>
  <data name="NotLastNodeCanSelect" xml:space="preserve">
    <value>不是末级节点不可选择</value>
  </data>
  <data name="UpLoadingPleaseWait" xml:space="preserve">
    <value>正在上传,请稍等......</value>
  </data>
  <data name="LoadingPleaseWait" xml:space="preserve">
    <value>正在下载,请稍等......</value>
  </data>
  <data name="ObjectCannotFind" xml:space="preserve">
    <value>找不到对象</value>
  </data>
  <data name="ErrorType" xml:space="preserve">
    <value>不正确的类型</value>
  </data>
  <data name="PleaseSelect" xml:space="preserve">
    <value>请选择</value>
  </data>
</root>