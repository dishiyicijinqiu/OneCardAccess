<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <section name="cachingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration, Version=2.1.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
  </configSections>
  <configProtectedData>
    <providers>
      <add keyContainerName="SZKL" useMachineContainer="true" description="SZKL Keys" name="SZKLRsaProtectedConfigurationProvider" type="System.Configuration.RsaProtectedConfigurationProvider,System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
    </providers>
  </configProtectedData>
  <loggingConfiguration name="Logging Application Block" tracingEnabled="true" defaultCategory="General" logWarningsWhenNoCategoriesMatch="true">
    <listeners>
      <add name="Rolling Flat File Trace Listener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.RollingFlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging" fileName="log\OneCardAccess.log" footer="----------------------------------------" formatter="Text Formatter" header="----------------------------------------" rollFileExistsBehavior="Overwrite" rollInterval="Day" rollSizeKB="0" timeStampPattern="yyyy-MM-dd" maxArchivedFiles="0" traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId, Callstack" filter="All" />
    </listeners>
    <formatters>
      <add type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging" template="时间:{timestamp(local)}{newline}&#xA;分类: {category}{newline}&#xA;消息:{message}{newline}&#xA;优先级: {priority}{newline}&#xA;严重程度: {severity}{newline}&#xA;标题:{title}{newline}&#xA;计算机名称: {machine}{newline}&#xA;应用程序域: {appDomain}{newline}&#xA;进程Id: {processId}{newline}&#xA;进程名称: {processName}{newline}&#xA;线程Id: {win32ThreadId}{newline}&#xA;线程名称: {threadName}" name="Text Formatter" />
    </formatters>
    <categorySources>
      <add switchValue="All" name="General">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </add>
      <add switchValue="All" name="ApplicationLog">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </add>
      <add switchValue="All" name="ServiceHostLog">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </add>
      <add switchValue="All" name="WCFMethodLog">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </allEvents>
      <notProcessed switchValue="All" name="Unprocessed Category">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </notProcessed>
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  <dataConfiguration defaultDatabase="DefaultConnectionString" />
  <connectionStrings>
    <add name="DefaultConnectionString" connectionString="Data Source=www.dishiyicijinqiu.com;Initial Catalog=OneCardAccessDB;User Id = sa;Password=111111;" providerName="System.Data.SqlClient" />
    <add name="localdb" connectionString="Data Source=(localdb)\.\MyIISDB;Initial Catalog=OneCardAccessDB;Integrated Security=True;" providerName="System.Data.SqlClient" />
    <add name="mylocaldb" connectionString="Data Source=(localdb)\MSSQLLocalDB;Initial Catalog=OneCardAccessDB;Integrated Security=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False" providerName="System.Data.SqlClient" />
    <add name="myprojectlocaldb" connectionString="Data Source=(localdb)\ProjectsV12;Initial Catalog=OneCardAccessDB;Integrated Security=True;Connect Timeout=3000;Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <appSettings>
    <add key="SessionCacheName" value="SessionCache" />
    <add key="SessionTimeOutMinutes" value="30" />
  </appSettings>
  <cachingConfiguration defaultCacheManager="DefaultCache">
    <cacheManagers>
      <add name="DefaultCache" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" expirationPollFrequencyInSeconds="60" maximumElementsInCacheBeforeScavenging="1000" numberToRemoveWhenScavenging="10" backingStoreName="NullBackingStore" />
      <add name="SessionCache" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" expirationPollFrequencyInSeconds="360000" maximumElementsInCacheBeforeScavenging="10000" numberToRemoveWhenScavenging="100" backingStoreName="NullBackingStore" />
    </cacheManagers>
    <backingStores>
      <add type="Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.NullBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="NullBackingStore" />
    </backingStores>
  </cachingConfiguration>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <alias alias="Interception" type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception, Version=2.1.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <alias alias="IMatchingRule" type="Microsoft.Practices.Unity.InterceptionExtension.IMatchingRule, Microsoft.Practices.Unity.Interception, Version=2.1.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <alias alias="ICallHandler" type="Microsoft.Practices.Unity.InterceptionExtension.ICallHandler, Microsoft.Practices.Unity.Interception, Version=2.1.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <alias alias="AssemblyMatchingRule" type="Microsoft.Practices.Unity.InterceptionExtension.AssemblyMatchingRule, Microsoft.Practices.Unity.Interception, Version=2.1.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <alias alias="CustomAttributeMatchingRule" type="Microsoft.Practices.Unity.InterceptionExtension.CustomAttributeMatchingRule, Microsoft.Practices.Unity.Interception, Version=2.1.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <alias alias="MemberNameMatchingRule" type="Microsoft.Practices.Unity.InterceptionExtension.MemberNameMatchingRule, Microsoft.Practices.Unity.Interception, Version=2.1.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <alias alias="NamespaceMatchingRule" type="Microsoft.Practices.Unity.InterceptionExtension.NamespaceMatchingRule, Microsoft.Practices.Unity.Interception, Version=2.1.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <alias alias="ParameterTypeMatchingRule" type="Microsoft.Practices.Unity.InterceptionExtension.ParameterTypeMatchingRule, Microsoft.Practices.Unity.Interception, Version=2.1.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <alias alias="PropertyMatchingRule" type="Microsoft.Practices.Unity.InterceptionExtension.PropertyMatchingRule, Microsoft.Practices.Unity.Interception, Version=2.1.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <alias alias="TagAttributeMatchingRule" type="Microsoft.Practices.Unity.InterceptionExtension.TagAttributeMatchingRule, Microsoft.Practices.Unity.Interception, Version=2.1.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <alias alias="TypeMatchingRule" type="Microsoft.Practices.Unity.InterceptionExtension.TypeMatchingRule, Microsoft.Practices.Unity.Interception, Version=2.1.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <alias alias="VirtualMethodInterceptor" type="Microsoft.Practices.Unity.InterceptionExtension.VirtualMethodInterceptor, Microsoft.Practices.Unity.Interception, Version=2.1.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <alias alias="InterfaceInterceptor" type="Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor, Microsoft.Practices.Unity.Interception, Version=2.1.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <alias alias="TransparentProxyInterceptor" type="Microsoft.Practices.Unity.InterceptionExtension.TransparentProxyInterceptor, Microsoft.Practices.Unity.Interception, Version=2.1.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <alias alias="IInterceptionBehavior" type="Microsoft.Practices.Unity.InterceptionExtension.IInterceptionBehavior, Microsoft.Practices.Unity.Interception, Version=2.1.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <alias alias="PolicyInjectionBehavior" type="Microsoft.Practices.Unity.InterceptionExtension.PolicyInjectionBehavior, Microsoft.Practices.Unity.Interception, Version=2.1.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <alias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
    <namespace name="FengSharp.OneCardAccess.Domain.RBACModule.Service.Interface" />
    <namespace name="FengSharp.OneCardAccess.Domain.RBACModule.Service" />
    <namespace name="FengSharp.OneCardAccess.Domain.HRModule.Service.Interface" />
    <namespace name="FengSharp.OneCardAccess.Domain.HRModule.Service" />
    <namespace name="FengSharp.OneCardAccess.Domain.BSSModule.Service.Interface" />
    <namespace name="FengSharp.OneCardAccess.Domain.BSSModule.Service" />
    <namespace name="FengSharp.OneCardAccess.Domain.CRMModule.Service.Interface" />
    <namespace name="FengSharp.OneCardAccess.Domain.CRMModule.Service" />
    <assembly name="FengSharp.OneCardAccess.Domain.RBACModule.Service.Interface" />
    <assembly name="FengSharp.OneCardAccess.Domain.RBACModule.Service" />
    <assembly name="FengSharp.OneCardAccess.Domain.HRModule.Service.Interface" />
    <assembly name="FengSharp.OneCardAccess.Domain.HRModule.Service" />
    <assembly name="FengSharp.OneCardAccess.Domain.BSSModule.Service.Interface" />
    <assembly name="FengSharp.OneCardAccess.Domain.BSSModule.Service" />
    <assembly name="FengSharp.OneCardAccess.Domain.CRMModule.Service.Interface" />
    <assembly name="FengSharp.OneCardAccess.Domain.CRMModule.Service" />
    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension,Microsoft.Practices.Unity.Interception.Configuration" />
    <container name="ServicesContainer">
      <extension type="Interception" />
      <register type="IAuthService" mapTo="AuthService">
        <lifetime type="singleton" />
        <interceptor type="InterfaceInterceptor" isDefaultForType="True" />
        <policyInjection />
      </register>
      <register type="IAccessService" mapTo="AccessService">
        <lifetime type="singleton" />
        <interceptor type="InterfaceInterceptor" isDefaultForType="True" />
        <policyInjection />
      </register>
      <register type="IMenuService" mapTo="MenuService">
        <lifetime type="singleton" />
        <interceptor type="InterfaceInterceptor" isDefaultForType="True" />
        <policyInjection />
      </register>
      <register type="IActionService" mapTo="ActionService">
        <lifetime type="singleton" />
        <interceptor type="InterfaceInterceptor" isDefaultForType="True" />
        <policyInjection />
      </register>
      <register type="IUserService" mapTo="UserService">
        <lifetime type="singleton" />
        <interceptor type="InterfaceInterceptor" isDefaultForType="True" />
        <policyInjection />
      </register>
      <register type="IRoleService" mapTo="RoleService">
        <lifetime type="singleton" />
        <interceptor type="InterfaceInterceptor" isDefaultForType="True" />
        <policyInjection />
      </register>
      <register type="IDeptService" mapTo="DeptService">
        <lifetime type="singleton" />
        <interceptor type="InterfaceInterceptor" isDefaultForType="True" />
        <policyInjection />
      </register>
      <register type="IEmployeeService" mapTo="EmployeeService">
        <lifetime type="singleton" />
        <interceptor type="InterfaceInterceptor" isDefaultForType="True" />
        <policyInjection />
      </register>
      <register type="FengSharp.OneCardAccess.Infrastructure.Services.Interface.IDicDataService,FengSharp.OneCardAccess.Infrastructure.Services.Interface" mapTo="FengSharp.OneCardAccess.Infrastructure.Services.DicDataService,FengSharp.OneCardAccess.Infrastructure.Services">
        <lifetime type="singleton" />
        <interceptor type="InterfaceInterceptor" isDefaultForType="True" />
        <policyInjection />
      </register>
      <register type="IProductService" mapTo="ProductService">
        <lifetime type="singleton" />
        <interceptor type="InterfaceInterceptor" isDefaultForType="True" />
        <policyInjection />
      </register>
      <register type="IRegisterService" mapTo="RegisterService">
        <lifetime type="singleton" />
        <interceptor type="InterfaceInterceptor" isDefaultForType="True" />
        <policyInjection />
      </register>
      <register type="ICompanyService" mapTo="CompanyService">
        <lifetime type="singleton" />
        <interceptor type="InterfaceInterceptor" isDefaultForType="True" />
        <policyInjection />
      </register>
      <register type="IRawMateService" mapTo="RawMateService">
        <lifetime type="singleton" />
        <interceptor type="InterfaceInterceptor" isDefaultForType="True" />
        <policyInjection />
      </register>
      <register type="IStockService" mapTo="StockService">
        <lifetime type="singleton" />
        <interceptor type="InterfaceInterceptor" isDefaultForType="True" />
        <policyInjection />
      </register>
      <register type="IDlyTypeService" mapTo="DlyTypeService">
        <lifetime type="singleton" />
        <interceptor type="InterfaceInterceptor" isDefaultForType="True" />
        <policyInjection />
      </register>
      <register type="IInputLevelService" mapTo="InputLevelService">
        <lifetime type="singleton" />
        <interceptor type="InterfaceInterceptor" isDefaultForType="True" />
        <policyInjection />
      </register>
      <register type="IDlyNdxService" mapTo="DlyNdxService">
        <lifetime type="singleton" />
        <interceptor type="InterfaceInterceptor" isDefaultForType="True" />
        <policyInjection />
      </register>
      <register type="IPFBNSNRuleService" mapTo="PFBNSNRuleService">
        <lifetime type="singleton" />
        <interceptor type="InterfaceInterceptor" isDefaultForType="True" />
        <policyInjection />
      </register>
      <interception>
        <policy name="CachingPolicy">
          <matchingRule name="CachingAttributeMatchingRule" type="FengSharp.OneCardAccess.Infrastructure.Caching_Handling.CachingAttributeMatchingRule,FengSharp.OneCardAccess.Infrastructure" />
          <callHandler name="CachingCallHandler" type="FengSharp.OneCardAccess.Infrastructure.Caching_Handling.CachingCallHandler,FengSharp.OneCardAccess.Infrastructure">
            <constructor />
          </callHandler>
        </policy>
      </interception>
    </container>
  </unity>
  <system.serviceModel>
    <behaviors>
      <endpointBehaviors>
        <behavior name="">
          <ApplicationContext isBidirectional="false" sessionCheck="true" />
          <ExceptionHandling />
        </behavior>
        <behavior name="NoApplicationContextBehavior">
          <ExceptionHandling />
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="">
          <serviceMetadata httpGetEnabled="false" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <unity containerName="ServicesContainer" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <extensions>
      <behaviorExtensions>
        <add name="unity" type="FengSharp.OneCardAccess.Infrastructure.Services.UnityBehaviorElement, FengSharp.OneCardAccess.Infrastructure.Services" />
        <add name="ApplicationContext" type="FengSharp.OneCardAccess.Infrastructure.ApplicationContextBehaviorElement, FengSharp.OneCardAccess.Infrastructure" />
        <add name="ExceptionHandling" type="FengSharp.OneCardAccess.Infrastructure.ExceptionHandlingBehaviorElement, FengSharp.OneCardAccess.Infrastructure" />
      </behaviorExtensions>
      <bindingElementExtensions>
        <add name="gzipMessageEncoding" type="GZipEncoder.GZipMessageEncodingElement, GZipEncoder, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
      </bindingElementExtensions>
    </extensions>
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true">
      <serviceActivations>
        <add relativeAddress="DicDataService.svc" service="FengSharp.OneCardAccess.Infrastructure.Services.DicDataService" factory="FengSharp.OneCardAccess.Application.IntegeatedManageServer.DefaultServiceHostFactory" />
        <add relativeAddress="CompanyService.svc" service="FengSharp.OneCardAccess.Domain.CRMModule.Service.CompanyService" factory="FengSharp.OneCardAccess.Application.IntegeatedManageServer.DefaultServiceHostFactory" />
        <add relativeAddress="DeptService.svc" service="FengSharp.OneCardAccess.Domain.HRModule.Service.DeptService" factory="FengSharp.OneCardAccess.Application.IntegeatedManageServer.DefaultServiceHostFactory" />
        <add relativeAddress="EmployeeService.svc" service="FengSharp.OneCardAccess.Domain.HRModule.Service.EmployeeService" factory="FengSharp.OneCardAccess.Application.IntegeatedManageServer.DefaultServiceHostFactory" />
        <add relativeAddress="AuthService.svc" service="FengSharp.OneCardAccess.Domain.RBACModule.Service.AuthService" factory="FengSharp.OneCardAccess.Application.IntegeatedManageServer.DefaultServiceHostFactory" />
        <add relativeAddress="AccessService.svc" service="FengSharp.OneCardAccess.Domain.RBACModule.Service.AccessService" factory="FengSharp.OneCardAccess.Application.IntegeatedManageServer.DefaultServiceHostFactory" />
        <add relativeAddress="ActionService.svc" service="FengSharp.OneCardAccess.Domain.RBACModule.Service.ActionService" factory="FengSharp.OneCardAccess.Application.IntegeatedManageServer.DefaultServiceHostFactory" />
        <add relativeAddress="MenuService.svc" service="FengSharp.OneCardAccess.Domain.RBACModule.Service.MenuService" factory="FengSharp.OneCardAccess.Application.IntegeatedManageServer.DefaultServiceHostFactory" />
        <add relativeAddress="RoleService.svc" service="FengSharp.OneCardAccess.Domain.RBACModule.Service.RoleService" factory="FengSharp.OneCardAccess.Application.IntegeatedManageServer.DefaultServiceHostFactory" />
        <add relativeAddress="UserService.svc" service="FengSharp.OneCardAccess.Domain.RBACModule.Service.UserService" factory="FengSharp.OneCardAccess.Application.IntegeatedManageServer.DefaultServiceHostFactory" />
        <add relativeAddress="DlyNdxService.svc" service="FengSharp.OneCardAccess.Domain.BSSModule.Service.DlyNdxService" factory="FengSharp.OneCardAccess.Application.IntegeatedManageServer.DefaultServiceHostFactory" />
        <add relativeAddress="DlyTypeService.svc" service="FengSharp.OneCardAccess.Domain.BSSModule.Service.DlyTypeService" factory="FengSharp.OneCardAccess.Application.IntegeatedManageServer.DefaultServiceHostFactory" />
        <add relativeAddress="InputLevelService.svc" service="FengSharp.OneCardAccess.Domain.BSSModule.Service.InputLevelService" factory="FengSharp.OneCardAccess.Application.IntegeatedManageServer.DefaultServiceHostFactory" />
        <add relativeAddress="PFBNSNRuleService.svc" service="FengSharp.OneCardAccess.Domain.BSSModule.Service.PFBNSNRuleService" factory="FengSharp.OneCardAccess.Application.IntegeatedManageServer.DefaultServiceHostFactory" />
        <add relativeAddress="ProductService.svc" service="FengSharp.OneCardAccess.Domain.BSSModule.Service.ProductService" factory="FengSharp.OneCardAccess.Application.IntegeatedManageServer.DefaultServiceHostFactory" />
        <add relativeAddress="RawMateService.svc" service="FengSharp.OneCardAccess.Domain.BSSModule.Service.RawMateService" factory="FengSharp.OneCardAccess.Application.IntegeatedManageServer.DefaultServiceHostFactory" />
        <add relativeAddress="RegisterService.svc" service="FengSharp.OneCardAccess.Domain.BSSModule.Service.RegisterService" factory="FengSharp.OneCardAccess.Application.IntegeatedManageServer.DefaultServiceHostFactory" />
        <add relativeAddress="StockService.svc" service="FengSharp.OneCardAccess.Domain.BSSModule.Service.StockService" factory="FengSharp.OneCardAccess.Application.IntegeatedManageServer.DefaultServiceHostFactory" />
      </serviceActivations>
    </serviceHostingEnvironment>
    <bindings>
      <basicHttpBinding>
        <binding receiveTimeout="00:05:00" />
      </basicHttpBinding>
      <customBinding>
        <binding name="">
          <gzipMessageEncoding innerMessageEncoding="textMessageEncoding" />
          <httpTransport manualAddressing="false" maxReceivedMessageSize="65536" authenticationScheme="Anonymous" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard" realm="" useDefaultWebProxy="true" />
        </binding>
      </customBinding>
      <wsHttpBinding>
        <binding receiveTimeout="00:05:00" useDefaultWebProxy="false" />
      </wsHttpBinding>
    </bindings>
    <services>
      <service name="FengSharp.OneCardAccess.Domain.RBACModule.Service.AuthService">
        <endpoint behaviorConfiguration="NoApplicationContextBehavior" binding="customBinding" name="AuthService" contract="FengSharp.OneCardAccess.Domain.RBACModule.Service.Interface.IAuthService" />
      </service>
      <service name="FengSharp.OneCardAccess.Domain.RBACModule.Service.AccessService">
        <endpoint binding="customBinding" name="AccessService" contract="FengSharp.OneCardAccess.Domain.RBACModule.Service.Interface.IAccessService" />
      </service>
      <service name="FengSharp.OneCardAccess.Domain.RBACModule.Service.MenuService">
        <endpoint binding="customBinding" name="MenuService" contract="FengSharp.OneCardAccess.Domain.RBACModule.Service.Interface.IMenuService" />
      </service>
      <service name="FengSharp.OneCardAccess.Domain.RBACModule.Service.ActionService">
        <endpoint binding="customBinding" name="ActionService" contract="FengSharp.OneCardAccess.Domain.RBACModule.Service.Interface.IActionService" />
      </service>
      <service name="FengSharp.OneCardAccess.Domain.RBACModule.Service.UserService">
        <endpoint binding="customBinding" name="UserService" contract="FengSharp.OneCardAccess.Domain.RBACModule.Service.Interface.IUserService" />
      </service>
      <service name="FengSharp.OneCardAccess.Domain.RBACModule.Service.RoleService">
        <endpoint binding="customBinding" name="RoleService" contract="FengSharp.OneCardAccess.Domain.RBACModule.Service.Interface.IRoleService" />
      </service>
      <service name="FengSharp.OneCardAccess.Domain.HRModule.Service.DeptService">
        <endpoint binding="customBinding" name="DeptService" contract="FengSharp.OneCardAccess.Domain.HRModule.Service.Interface.IDeptService" />
      </service>
      <service name="FengSharp.OneCardAccess.Domain.HRModule.Service.EmployeeService">
        <endpoint binding="customBinding" name="EmployeeService" contract="FengSharp.OneCardAccess.Domain.HRModule.Service.Interface.IEmployeeService" />
      </service>
      <service name="FengSharp.OneCardAccess.Infrastructure.Services.DicDataService">
        <endpoint binding="customBinding" name="DicDataService" contract="FengSharp.OneCardAccess.Infrastructure.Services.Interface.IDicDataService" />
      </service>
      <service name="FengSharp.OneCardAccess.Domain.BSSModule.Service.ProductService">
        <endpoint binding="customBinding" name="ProductService" contract="FengSharp.OneCardAccess.Domain.BSSModule.Service.Interface.IProductService" />
      </service>
      <service name="FengSharp.OneCardAccess.Domain.BSSModule.Service.RegisterService">
        <endpoint binding="customBinding" name="RegisterService" contract="FengSharp.OneCardAccess.Domain.BSSModule.Service.Interface.IRegisterService" />
      </service>
      <service name="FengSharp.OneCardAccess.Domain.CRMModule.Service.CompanyService">
        <endpoint binding="customBinding" name="CompanyService" contract="FengSharp.OneCardAccess.Domain.CRMModule.Service.Interface.ICompanyService" />
      </service>
      <service name="FengSharp.OneCardAccess.Domain.BSSModule.Service.RawMateService">
        <endpoint binding="customBinding" name="RawMateService" contract="FengSharp.OneCardAccess.Domain.BSSModule.Service.Interface.IRawMateService" />
      </service>
      <service name="FengSharp.OneCardAccess.Domain.BSSModule.Service.StockService">
        <endpoint binding="customBinding" name="StockService" contract="FengSharp.OneCardAccess.Domain.BSSModule.Service.Interface.IStockService" />
      </service>
      <service name="FengSharp.OneCardAccess.Domain.BSSModule.Service.DlyTypeService">
        <endpoint binding="customBinding" name="DlyTypeService" contract="FengSharp.OneCardAccess.Domain.BSSModule.Service.Interface.IDlyTypeService" />
      </service>
      <service name="FengSharp.OneCardAccess.Domain.BSSModule.Service.InputLevelService">
        <endpoint binding="customBinding" name="InputLevelService" contract="FengSharp.OneCardAccess.Domain.BSSModule.Service.Interface.IInputLevelService" />
      </service>
      <service name="FengSharp.OneCardAccess.Domain.BSSModule.Service.DlyNdxService">
        <endpoint binding="customBinding" name="DlyNdxService" contract="FengSharp.OneCardAccess.Domain.BSSModule.Service.Interface.IDlyNdxService" />
      </service>
      <service name="FengSharp.OneCardAccess.Domain.BSSModule.Service.PFBNSNRuleService">
        <endpoint binding="customBinding" name="PFBNSNRuleService" contract="FengSharp.OneCardAccess.Domain.BSSModule.Service.Interface.IPFBNSNRuleService" />
      </service>
    </services>
  </system.serviceModel>
  <system.web>
    <compilation debug="true" targetFramework="4.0" />
    <!--文件最大大小，及超时时间-->
    <httpRuntime executionTimeout="300" maxRequestLength="102400" />
    <!--<httpHandlers>
      <add verb="GET" path="*.mmav" type="FengSharp.OneCardAccess.Application.IntegeatedManageServer.UpLoadHandler"/>
    </httpHandlers>-->
  </system.web>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true" />
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="false" />
    <staticContent>
      <mimeMap fileExtension=".config" mimeType="text/xml" />
    </staticContent>
    <security>
      <requestFiltering>
        <fileExtensions>
          <remove fileExtension=".config" />
        </fileExtensions>
      </requestFiltering>
    </security>
  </system.webServer>
</configuration>
